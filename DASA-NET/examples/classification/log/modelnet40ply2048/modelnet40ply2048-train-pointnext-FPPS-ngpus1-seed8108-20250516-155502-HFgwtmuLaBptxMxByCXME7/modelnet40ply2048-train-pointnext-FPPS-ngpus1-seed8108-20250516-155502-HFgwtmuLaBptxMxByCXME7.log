[05/16 15:55:02] ModelNet40Ply2048 INFO: dist_url: tcp://localhost:8888
dist_backend: nccl
multiprocessing_distributed: False
ngpus_per_node: 1
world_size: 1
launcher: mp
local_rank: 0
use_gpu: True
seed: 8108
epoch: 0
epochs: 600
ignore_index: None
val_fn: validate
deterministic: False
sync_bn: False
criterion_args:
  NAME: SmoothCrossEntropy
  label_smoothing: 0.2
use_mask: False
grad_norm_clip: 1
layer_decay: 0
step_per_update: 1
start_epoch: 1
sched_on_epoch: True
wandb:
  use_wandb: False
  project: PointNeXt-ModelNet40Ply2048
  tags: ['modelnet40ply2048', 'train', 'pointnext-FPPS', 'ngpus1', 'seed8108']
  name: modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7
use_amp: False
use_voting: False
val_freq: 1
resume: False
test: False
finetune: False
mode: train
logname: None
load_path: None
print_freq: 10
save_freq: -1
root_dir: log/modelnet40ply2048
pretrained_path: None
datatransforms:
  train: ['PointsToTensor', 'PointCloudScaleAndTranslate']
  val: ['PointsToTensor']
  vote: ['PointCloudScaleAndTranslate']
  kwargs:
    shift: [0.2, 0.2, 0.2]
feature_keys: pos
num_points: 1024
dataset:
  common:
    NAME: ModelNet40Ply2048
    data_dir: ./data/ModelNet40Ply2048
  train:
    split: train
    num_points: 1024
  val:
    split: test
    num_points: 1024
batch_size: 32
dataloader:
  num_workers: 6
num_classes: 24
sched: cosine
warmup_epochs: 0
min_lr: None
lr: 0.001
optimizer:
  NAME: adamw
  weight_decay: 0.05
log_dir: log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7
val_batch_size: 64
model:
  NAME: BaseCls
  encoder_args:
    NAME: PointNextFPPSEncoder
    blocks: [1, 1, 1, 1, 1, 1]
    strides: [1, 2, 2, 2, 2, 1]
    width: 32
    in_channels: 3
    radius: 0.15
    radius_scaling: 1.5
    sa_layers: 2
    sa_use_res: True
    nsample: 32
    expansion: 4
    aggr_args:
      feature_type: dp_fj
      reduction: max
    group_args:
      NAME: ballquery
      normalize_dp: True
    conv_args:
      order: conv-norm-act
    act_args:
      act: relu
    norm_args:
      norm: bn
  cls_args:
    NAME: ClsHead
    num_classes: 24
    mlps: [512, 256]
    norm_args:
      norm: bn1d
rank: 0
distributed: False
mp: False
task_name: modelnet40ply2048
exp_name: pointnext-FPPS
opts: 
run_name: modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7
run_dir: log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7
exp_dir: log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7
ckpt_dir: log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7/checkpoint
log_path: log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7.log
cfg_path: log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7/cfg.yaml
[05/16 15:55:02] ModelNet40Ply2048 INFO: radius: [[0.15], [0.15], [0.22499999999999998], [0.33749999999999997], [0.50625], [0.7593749999999999]],
 nsample: [[32], [32], [32], [32], [32], [32]]
[05/16 15:55:06] ModelNet40Ply2048 INFO: NAME: ballquery
normalize_dp: True
radius: 0.15
nsample: 32
[05/16 15:55:06] ModelNet40Ply2048 INFO: NAME: ballquery
normalize_dp: True
radius: 0.22499999999999998
nsample: 32
[05/16 15:55:06] ModelNet40Ply2048 INFO: NAME: ballquery
normalize_dp: True
radius: 0.33749999999999997
nsample: 32
[05/16 15:55:06] ModelNet40Ply2048 INFO: NAME: ballquery
normalize_dp: True
radius: 0.50625
nsample: 32
[05/16 15:55:06] ModelNet40Ply2048 INFO: NAME: ballquery
normalize_dp: True
radius: None
nsample: None
[05/16 15:55:06] ModelNet40Ply2048 INFO: BaseCls(
  (encoder): PointNextFPPSEncoder(
    (encoder): Sequential(
      (0): Sequential(
        (0): SetAbstraction(
          (convs): Sequential(
            (0): Conv1d(3, 32, kernel_size=(1,), stride=(1,))
          )
        )
      )
      (1): Sequential(
        (0): SetAbstraction(
          (skipconv): Sequential(
            (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
          )
          (act): ReLU(inplace=True)
          (convs): Sequential(
            (0): Sequential(
              (0): Conv2d(35, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (grouper): QueryAndGroup()
        )
      )
      (2): Sequential(
        (0): SetAbstraction(
          (skipconv): Sequential(
            (0): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
          )
          (act): ReLU(inplace=True)
          (convs): Sequential(
            (0): Sequential(
              (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (grouper): QueryAndGroup()
        )
      )
      (3): Sequential(
        (0): SetAbstraction(
          (skipconv): Sequential(
            (0): Conv1d(128, 256, kernel_size=(1,), stride=(1,))
          )
          (act): ReLU(inplace=True)
          (convs): Sequential(
            (0): Sequential(
              (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (grouper): QueryAndGroup()
        )
      )
      (4): Sequential(
        (0): SetAbstraction(
          (skipconv): Sequential(
            (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
          )
          (act): ReLU(inplace=True)
          (convs): Sequential(
            (0): Sequential(
              (0): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (grouper): QueryAndGroup()
        )
      )
      (5): Sequential(
        (0): SetAbstraction(
          (convs): Sequential(
            (0): Sequential(
              (0): Conv2d(515, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (1): Sequential(
              (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
          )
          (grouper): GroupAll()
        )
      )
    )
  )
  (prediction): ClsHead(
    (head): Sequential(
      (0): Sequential(
        (0): Linear(in_features=512, out_features=512, bias=False)
        (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Dropout(p=0.5, inplace=False)
      (2): Sequential(
        (0): Linear(in_features=512, out_features=256, bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (3): Dropout(p=0.5, inplace=False)
      (4): Sequential(
        (0): Linear(in_features=256, out_features=24, bias=True)
      )
    )
  )
  (criterion): SmoothCrossEntropy()
)
[05/16 15:55:06] ModelNet40Ply2048 INFO: Number of params: 1.3694 M
[05/16 15:55:06] ModelNet40Ply2048 INFO: Param groups = {
  "decay": {
    "weight_decay": 0.05,
    "params": [
      "encoder.encoder.0.0.convs.0.weight",
      "encoder.encoder.1.0.skipconv.0.weight",
      "encoder.encoder.1.0.convs.0.0.weight",
      "encoder.encoder.1.0.convs.1.0.weight",
      "encoder.encoder.2.0.skipconv.0.weight",
      "encoder.encoder.2.0.convs.0.0.weight",
      "encoder.encoder.2.0.convs.1.0.weight",
      "encoder.encoder.3.0.skipconv.0.weight",
      "encoder.encoder.3.0.convs.0.0.weight",
      "encoder.encoder.3.0.convs.1.0.weight",
      "encoder.encoder.4.0.skipconv.0.weight",
      "encoder.encoder.4.0.convs.0.0.weight",
      "encoder.encoder.4.0.convs.1.0.weight",
      "encoder.encoder.5.0.convs.0.0.weight",
      "encoder.encoder.5.0.convs.1.0.weight",
      "prediction.head.0.0.weight",
      "prediction.head.2.0.weight",
      "prediction.head.4.0.weight"
    ],
    "lr_scale": 1.0
  },
  "no_decay": {
    "weight_decay": 0.0,
    "params": [
      "encoder.encoder.0.0.convs.0.bias",
      "encoder.encoder.1.0.skipconv.0.bias",
      "encoder.encoder.1.0.convs.0.1.weight",
      "encoder.encoder.1.0.convs.0.1.bias",
      "encoder.encoder.1.0.convs.1.1.weight",
      "encoder.encoder.1.0.convs.1.1.bias",
      "encoder.encoder.2.0.skipconv.0.bias",
      "encoder.encoder.2.0.convs.0.1.weight",
      "encoder.encoder.2.0.convs.0.1.bias",
      "encoder.encoder.2.0.convs.1.1.weight",
      "encoder.encoder.2.0.convs.1.1.bias",
      "encoder.encoder.3.0.skipconv.0.bias",
      "encoder.encoder.3.0.convs.0.1.weight",
      "encoder.encoder.3.0.convs.0.1.bias",
      "encoder.encoder.3.0.convs.1.1.weight",
      "encoder.encoder.3.0.convs.1.1.bias",
      "encoder.encoder.4.0.skipconv.0.bias",
      "encoder.encoder.4.0.convs.0.1.weight",
      "encoder.encoder.4.0.convs.0.1.bias",
      "encoder.encoder.4.0.convs.1.1.weight",
      "encoder.encoder.4.0.convs.1.1.bias",
      "encoder.encoder.5.0.convs.0.1.weight",
      "encoder.encoder.5.0.convs.0.1.bias",
      "encoder.encoder.5.0.convs.1.1.weight",
      "encoder.encoder.5.0.convs.1.1.bias",
      "prediction.head.0.1.weight",
      "prediction.head.0.1.bias",
      "prediction.head.2.1.weight",
      "prediction.head.2.1.bias",
      "prediction.head.4.0.bias"
    ],
    "lr_scale": 1.0
  }
}
[05/16 15:55:06] ModelNet40Ply2048 INFO: ==> sucessfully loaded test data
[05/16 15:55:06] ModelNet40Ply2048 INFO: length of validation dataset: 1896
[05/16 15:55:06] ModelNet40Ply2048 INFO: ==> sucessfully loaded test data
[05/16 15:55:06] ModelNet40Ply2048 INFO: number of classes of the dataset: 24, number of points sampled from dataset: 1024, number of points as model input: 1024
[05/16 15:55:06] ModelNet40Ply2048 INFO: Training from scratch
[05/16 15:55:06] ModelNet40Ply2048 INFO: ==> sucessfully loaded train data
[05/16 15:55:06] ModelNet40Ply2048 INFO: length of training dataset: 4408
[05/16 15:55:34] ModelNet40Ply2048 INFO: Find a better ckpt @E1
[05/16 15:55:34] ModelNet40Ply2048 INFO: 
Classes	Acc
airplane  : 100.00%
bathtub   : 63.33%
bed       : 0.00%
bench     : 70.00%
bookshelf : 77.78%
bottle    : 91.11%
bowl      : 4.44%
car       : 98.89%
chair     : 15.56%
cone      : 40.00%
cup       : 15.00%
curtain   : 0.00%
desk      : 20.59%
door      : 91.74%
dresser   : 47.25%
flower_pot: 16.81%
glass_box : 0.00%
guitar    : 95.65%
keyboard  : 100.00%
lamp      : 70.10%
laptop    : 64.58%
mantel    : 0.00%
monitor   : 0.00%
night_stand: 0.00%
E@1	OA: 46.73	mAcc: 45.12

[05/16 15:55:34] ModelNet40Ply2048 INFO: Epoch 1 LR 0.001000 train_oa 27.33, val_oa 46.73, best val oa 46.73
[05/16 15:55:34] ModelNet40Ply2048 INFO: Found the best model and saved in log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7/checkpoint/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7_ckpt_best.pth
[05/16 15:55:59] ModelNet40Ply2048 INFO: Epoch 2 LR 0.001000 train_oa 41.56, val_oa 46.26, best val oa 46.73
[05/16 15:56:25] ModelNet40Ply2048 INFO: Epoch 3 LR 0.001000 train_oa 48.95, val_oa 43.57, best val oa 46.73
[05/16 15:56:50] ModelNet40Ply2048 INFO: Find a better ckpt @E4
[05/16 15:56:50] ModelNet40Ply2048 INFO: 
Classes	Acc
airplane  : 100.00%
bathtub   : 67.78%
bed       : 17.78%
bench     : 44.44%
bookshelf : 17.78%
bottle    : 83.33%
bowl      : 74.44%
car       : 50.00%
chair     : 25.56%
cone      : 58.89%
cup       : 19.00%
curtain   : 92.22%
desk      : 60.78%
door      : 64.22%
dresser   : 48.35%
flower_pot: 42.48%
glass_box : 75.00%
guitar    : 97.83%
keyboard  : 82.50%
lamp      : 52.58%
laptop    : 72.92%
mantel    : 0.00%
monitor   : 2.50%
night_stand: 0.00%
E@4	OA: 53.74	mAcc: 52.10

[05/16 15:56:50] ModelNet40Ply2048 INFO: Epoch 4 LR 0.001000 train_oa 54.13, val_oa 53.74, best val oa 53.74
[05/16 15:56:50] ModelNet40Ply2048 INFO: Found the best model and saved in log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7/checkpoint/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7_ckpt_best.pth
[05/16 15:57:16] ModelNet40Ply2048 INFO: Find a better ckpt @E5
[05/16 15:57:16] ModelNet40Ply2048 INFO: 
Classes	Acc
airplane  : 100.00%
bathtub   : 14.44%
bed       : 42.22%
bench     : 27.78%
bookshelf : 7.78%
bottle    : 90.00%
bowl      : 86.67%
car       : 80.00%
chair     : 100.00%
cone      : 25.56%
cup       : 40.00%
curtain   : 52.22%
desk      : 79.41%
door      : 93.58%
dresser   : 73.63%
flower_pot: 63.72%
glass_box : 75.00%
guitar    : 97.83%
keyboard  : 80.00%
lamp      : 78.35%
laptop    : 39.58%
mantel    : 0.00%
monitor   : 2.50%
night_stand: 0.00%
E@5	OA: 60.18	mAcc: 56.26

[05/16 15:57:16] ModelNet40Ply2048 INFO: Epoch 5 LR 0.001000 train_oa 55.16, val_oa 60.18, best val oa 60.18
[05/16 15:57:16] ModelNet40Ply2048 INFO: Found the best model and saved in log/modelnet40ply2048/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7/checkpoint/modelnet40ply2048-train-pointnext-FPPS-ngpus1-seed8108-20250516-155502-HFgwtmuLaBptxMxByCXME7_ckpt_best.pth
[05/16 15:57:42] ModelNet40Ply2048 INFO: Epoch 6 LR 0.001000 train_oa 59.72, val_oa 58.54, best val oa 60.18
